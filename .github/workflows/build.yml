name: build-image

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      tag:
        required: true
        type: string
      environment:
        required: true
        type: string
    secrets:
      GH_ACCESS_TOKEN:
        required: true
      DOCKER_REGISTRY:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
      GOOGLE_PROJECT_ID:
        required: true
      SENTRY_AUTH_TOKEN:
        required: true
      SENTRY_ORG:
        required: true
      SENTRY_PROJECT:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: github.com/bloock
      GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        run: |
          git config --global url.https://$GH_ACCESS_TOKEN@github.com/.insteadOf https://github.com/
          export PATH=${PATH}:`go env GOPATH`/bin
          go install github.com/goware/modvendor@v0.5.0
          make cache || true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}      
      - uses: docker/setup-buildx-action@v1
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.GOOGLE_PROJECT_ID }}/${{ inputs.image }}:${{ inputs.tag }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/${{ secrets.GOOGLE_PROJECT_ID }}/${{ inputs.image }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/${{ secrets.GOOGLE_PROJECT_ID }}/${{ inputs.image }}:buildcache,mode=max
      -
        name: Build Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: ${{ inputs.environment }}
          version: ${{ inputs.tag }}
          set_commits: skip
