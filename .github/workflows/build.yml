name: build-image

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
    secrets:
      DOCKER_REGISTRY:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true
    outputs:
      tag:
        description: "Image tags pushed"
        value: ${{ jobs.build.outputs.tag }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.output.outputs.tag }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ inputs.image }}-${{ hashFiles('yarn-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ inputs.image }}-${{ hashFiles('yarn-lock.json') }}
      - 
        name: Set image tags
        if: ${{ github.event_name == 'push' && github.ref_type == 'branch' }}
        run: echo "IMAGE_TAG=${{ github.run_number }}-snapshot" >> $GITHUB_ENV
      - 
        name: Set image tags
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "IMAGE_TAG=pr-${{ github.event.pull_request.number }}-$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - 
        name: Set image tags
        if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
        run: echo "IMAGE_TAG=release-${{ github.ref_name }}" >> $GITHUB_ENV
      -
        name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/${{ inputs.image }}:${{ env.IMAGE_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      -
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - 
        id: output
        name: Set output
        run: echo "::set-output name=tag::${{ env.IMAGE_TAG }}"
