name: test-image

on:
  workflow_call:
    secrets:
      GH_ACCESS_TOKEN:
        required: true
      STRIPE_KEY:
        required: false
      BLOOCKCHAIN_PROVIDER:
        required: false
      BLOOCKCHAIN_ADDRESS:
        required: false
      BLOOCKCHAIN_PRIVATE_KEY:
        required: false
      BLOOCK_API_KEY:
        required: false
      AZURE_TENANT_ID_DEV:
        required: false
      AZURE_SUBSCRIPTION_ID_DEV:
        required: false
      AZURE_ANALYTICS_WORKSPACE_ID_DEV:
        required: false
      AZURE_ANALYTICS_SERVICE_PRINCIPAL_CLIENT_SECRET:
        required: false
      AZURE_ANALYTICS_SERVICE_PRINCIPAL_CLIENT_ID:
        required: false
      AZURE_CDN_ENDPOINT_HOSTNAME:
        required: false
      AZURE_CDN_ENDPOINT_NAME:
        required: false
      AZURE_CDN_PROFILE_NAME:
        required: false
      AZURE_CDN_RESOURCE_NAME:
        required: false
      AZURE_CDN_SERVICE_PRINCIPAL_CLIENT_SECRET:
        required: false
      AZURE_CDN_SERVICE_PRINCIPAL_CLIENT_ID:
        required: false
      AZURE_CONNECTION_STR:
        required: false
      TEST_AUTH_TOKEN:
        required: false
      INFURA_USER:
        required: false
      INFURA_PASSWORD:
        required: false

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      GOPRIVATE: github.com/bloock
      GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      SUBSCRIPTIONS_STRIPESECRETAPIKEY: ${{ secrets.STRIPE_KEY }}
      BLOOCKCHAINPROVIDER: ${{ secrets.BLOOCKCHAIN_PROVIDER }}
      BLOOCKCHAINADDRESS: ${{ secrets.BLOOCKCHAIN_ADDRESS }}
      BLOOCKCHAINPRIVATEKEY: ${{ secrets.BLOOCKCHAIN_PRIVATE_KEY }}
      BLOOCK_API_KEY: ${{ secrets.BLOOCK_API_KEY }}
      DATA_AVAILABILITY_AZURETENANTID: ${{ secrets.AZURE_TENANT_ID_DEV }}
      DATA_AVAILABILITY_AZURESUBSCRIPTIONID: ${{ secrets.AZURE_SUBSCRIPTION_ID_DEV }}
      DATA_AVAILABILITY_AZUREANALYTICSWORKSPACEID: ${{ secrets.AZURE_ANALYTICS_WORKSPACE_ID_DEV }}
      DATA_AVAILABILITY_AZUREANALYTICSSERVICEPRINCIPALCLIENTSECRET: ${{ secrets.AZURE_ANALYTICS_SERVICE_PRINCIPAL_CLIENT_SECRET }}
      DATA_AVAILABILITY_AZUREANALYTICSSERVICEPRINCIPALCLIENTID: ${{ secrets.AZURE_ANALYTICS_SERVICE_PRINCIPAL_CLIENT_ID }}
      DATA_AVAILABILITY_AZURECDNENDPOINTHOSTNAME: ${{ secrets.AZURE_CDN_ENDPOINT_HOSTNAME }}
      DATA_AVAILABILITY_AZURECDNENDPOINTNAME: ${{ secrets.AZURE_CDN_ENDPOINT_NAME }}
      DATA_AVAILABILITY_AZURECDNPROFILENAME: ${{ secrets.AZURE_CDN_PROFILE_NAME }}
      DATA_AVAILABILITY_AZURECDNRESOURCENAME: ${{ secrets.AZURE_CDN_RESOURCE_NAME }}
      DATA_AVAILABILITY_AZURECDNSERVICEPRINCIPALCLIENTSECRET: ${{ secrets.AZURE_CDN_SERVICE_PRINCIPAL_CLIENT_SECRET }}
      DATA_AVAILABILITY_AZURECDNSERVICEPRINCIPALCLIENTID: ${{ secrets.AZURE_CDN_SERVICE_PRINCIPAL_CLIENT_ID }}
      DATA_AVAILABILITY_AZURECONNECTIONSTR: ${{ secrets.AZURE_CONNECTION_STR }}
      DATA_AVAILABILITY_TESTAUTHTOKEN: ${{ secrets.TEST_AUTH_TOKEN }}
      DATA_AVAILABILITY_IPFSUSER: ${{ secrets.INFURA_USER }}
      DATA_AVAILABILITY_IPFSPASSWORD: ${{ secrets.INFURA_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        run: |
          sudo apt-get update && sudo apt-get install -y libvips libvips-dev
          git config --global url.https://$GH_ACCESS_TOKEN@github.com/.insteadOf https://github.com/
          export PATH=${PATH}:`go env GOPATH`/bin
          go install github.com/goware/modvendor@v0.5.0
          make cache || true
          go install github.com/golang/mock/mockgen@v1.6.0
          make mocks || true
      - name: Run tests
        run: make test
